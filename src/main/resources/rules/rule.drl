package devin.drools.rules

import devin.drools.data.Order;
import devin.drools.data.OrderLine;
import devin.drools.data.Coupon;
import devin.drools.util.Constants;
import devin.drools.util.CommonUtils;
import java.math.BigDecimal;

global devin.drools.service.CouponService couponService;

/**
 * 处理订单层优惠券
 * @param order     订单
 * @param coupon    优惠券
 */
function void handleOrderCoupon(Order order, Coupon coupon) {
    coupon.setUsable(true);

    // 优惠券的优惠金额
    BigDecimal discount = coupon.getDiscountAmout();
    discount = discount != null ? discount : BigDecimal.ZERO;
    // 订单总的优惠金额
    BigDecimal discountAmt = order.getDiscountAmount();
    discountAmt = discountAmt != null ? discountAmt : BigDecimal.ZERO;
    order.setDiscountAmount(discountAmt.add(discount));
}

/**
 * 处理商品层优惠券
 * @param order     订单
 * @param coupon    优惠券
 * @param number    商品的编号
 */
function void handleLineCoupon(Order order, Coupon coupon, String number) {
    coupon.setUsable(true);

    // 优惠券的优惠金额
    BigDecimal discount = coupon.getDiscountAmout();
    discount = discount != null ? discount : BigDecimal.ZERO;

    for (OrderLine line : order.getLines()) {
        if (line.getProduct() == null || !number.equals(line.getProduct().getNumber())) {
            continue;
        }
        // 商品行优惠总额
        BigDecimal discountLine = line.getDiscountAmout();
        discountLine = discountLine != null ? discountLine : BigDecimal.ZERO;
        line.setDiscountAmout(discountLine.add(discount));
    }
}

rule "rule_COUPON0001"
    no-loop true
    lock-on-active true
    activation-group "group1"
    when
        $order: Order(amount > 10 && channel == Constants.ORDER_CHANNEL_SHOP);
        forall(OrderLine(product.number != "PRODUCT0002") from $order.lines);
        $coupon: Coupon(code == "COUPON001") from $order.currentCoupon;
    then
        System.out.println(drools.getRule().getName());
        handleOrderCoupon($order, $coupon);
        couponService.calculateAfterCoupon($order);
end

rule "rule_COUPON0002"
    no-loop true
    lock-on-active true
    activation-group "group1"
    when
        $order: Order();
        Number(intValue > 0) from accumulate(
            $line: OrderLine(product.number == "PRODUCT0001") from $order.lines,
            init(int total = 0;),
            action(total += $line.getQuantity().intValue();),
            result(total));
        $coupon: Coupon(code == "COUPON002") from $order.currentCoupon;
    then
        System.out.println(drools.getRule().getName());
        handleLineCoupon($order, $coupon, "PRODUCT0001");
        couponService.calculateAfterCoupon($order);
end

rule "rule_COUPON00011"
    no-loop true
    lock-on-active true
    activation-group "group2"
    when
        $order: Order(amount > 10 && channel == Constants.ORDER_CHANNEL_SHOP);
        forall(OrderLine(product.number != "PRODUCT0002") from $order.lines);
        $coupon: Coupon(code == "COUPON001") from $order.currentCoupon;
    then
        System.out.println(drools.getRule().getName());
        handleOrderCoupon($order, $coupon);
        couponService.calculateAfterCoupon($order);
end

rule "rule_COUPON00022"
    no-loop true
    lock-on-active true
    activation-group "group2"
    when
        $order: Order(amount > 10 && channel == Constants.ORDER_CHANNEL_SHOP);
        forall(OrderLine(product.number != "PRODUCT0002") from $order.lines);
        $coupon: Coupon(code == "COUPON001") from $order.currentCoupon;
    then
        System.out.println(drools.getRule().getName());
        handleOrderCoupon($order, $coupon);
        couponService.calculateAfterCoupon($order);
end